name: macOS Build

on:
  workflow_dispatch:

jobs:
  build:
    name: Build for macOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Clean workspace
        run: |
          rm -rf deccord

      - name: Clone Deccord repository
        run: |
          git clone https://github.com/Deccord/deccord.git
          cd deccord
          chmod -R 777 .

      - name: Setup dependencies for macOS
        run: |
          brew install automake cmake curl libtool pkg-config python3 bison berkeley-db@4

      - name: Cache Depends
        uses: actions/cache@v4
        with:
          path: deccord/depends
          key: ${{ runner.os }}-depends-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-depends-

      - name: Cache Berkeley DB
        uses: actions/cache@v4
        with:
          path: deccord/db4
          key: ${{ runner.os }}-db4-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-db4-

      - name: Install Berkeley DB
        run: |
          cd deccord
          export LDFLAGS="-L$(brew --prefix berkeley-db@4)/lib -L$(brew --prefix openssl)/lib"
          export CPPFLAGS="-I$(brew --prefix berkeley-db@4)/include -I$(brew --prefix openssl)/include"
          export CFLAGS="-w -DHAVE_PTHREAD_MUTEX_ADAPTIVE_NP"
          export BDB_PREFIX="${PWD}/db4"
          ./contrib/install_db4.sh `pwd`

      - name: Build depends
        run: |
          cd deccord
          PATH=$(echo "$PATH" | sed -e 's/:\/mnt.*//g')
          cd depends
          make HOST=x86_64-apple-darwin -j$(sysctl -n hw.ncpu)
          cd ..

      - name: Build Deccord for macOS
        run: |
          cd deccord
          ./autogen.sh
          export BDB_PREFIX="${PWD}/db4"
          CONFIG_SITE=$PWD/depends/x86_64-apple-darwin/share/config.site ./configure --prefix=/ \
            BDB_LIBS="-L${BDB_PREFIX}/lib -ldb_cxx-4.8" \
            BDB_CFLAGS="-I${BDB_PREFIX}/include" \
            --disable-tests --disable-shared
          if [ -f "src/deccordd" ]; then
            echo "Skipping make, using cached binaries."
          else
            make -j$(sysctl -n hw.ncpu)
          fi

      - name: Strip Binaries
        run: |
          cd deccord
          strip src/deccordd src/deccord-cli src/deccord-tx src/qt/deccord-qt

      - name: Create Release Structure
        run: |
          cd deccord
          mkdir -p deccord-20.0.1-x86_64-apple-darwin/bin
          cp src/deccordd src/deccord-cli src/deccord-tx src/qt/deccord-qt deccord-20.0.1-x86_64-apple-darwin/bin/
          tar -czvf deccord-20.0.1-x86_64-apple-darwin.tar.gz deccord-20.0.1-x86_64-apple-darwin
          zip -r deccord-20.0.1-x86_64-apple-darwin.zip deccord-20.0.1-x86_64-apple-darwin

      - name: Upload macOS Build Artifact (tar.gz)
        uses: actions/upload-artifact@v4
        with:
          name: deccord-20.0.1-x86_64-apple-darwin-tar
          path: deccord/deccord-20.0.1-x86_64-apple-darwin.tar.gz

      - name: Upload macOS Build Artifact (zip)
        uses: actions/upload-artifact@v4
        with:
          name: deccord-20.0.1-x86_64-apple-darwin-zip
          path: deccord/deccord-20.0.1-x86_64-apple-darwin.zip

      - name: Upload Partial Build Artifacts on Failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: partial-build-mac-${{ github.run_id }}
          path: deccord/src
