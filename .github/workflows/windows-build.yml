name: Windows Build

on:
  workflow_dispatch:

jobs:
  build_windows:
    name: Build for Windows (x86_64-w64-mingw32)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Clean workspace
        run: |
          rm -rf deccord

      - name: Clone Deccord repository
        run: |
          git clone https://github.com/Deccord/deccord.git
          cd deccord
          chmod -R 777 .

      - name: Setup dependencies for Windows
        run: |
          sudo apt-get update
          sudo apt-get install -y make automake cmake curl g++-multilib libtool \
            binutils-gold bsdmainutils pkg-config python3 patch bison \
            g++-mingw-w64-x86-64 mingw-w64-tools gcc-mingw-w64
          sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
          sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix

      - name: Install Berkeley DB
        run: |
          cd deccord
          # Add system types header include
          echo '#include <stdint.h>' > db4.patch
          echo '#include <sys/types.h>' >> db4.patch
          cat ./contrib/install_db4.sh >> db4.patch
          mv db4.patch ./contrib/install_db4.sh
          chmod +x ./contrib/install_db4.sh
          ./contrib/install_db4.sh `pwd`
          export BDB_PREFIX="${PWD}/db4"

      - name: Build depends
        run: |
          cd deccord
          PATH=$(echo "$PATH" | sed -e 's/:\/mnt.*//g')
          cd depends
          make HOST=x86_64-w64-mingw32 -j$(nproc)
          cd ..

      - name: Build Deccord for Windows
        run: |
          cd deccord
          ./autogen.sh
          export BDB_PREFIX="${PWD}/db4"
          CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/ \
            --disable-tests --disable-shared \
            --enable-static \
            CXXFLAGS="-std=gnu++17 -static" \
            CFLAGS="-O2 -static" \
            LDFLAGS="-static-libgcc -static-libstdc++ -static"
          make -j$(nproc)

      - name: Strip Binaries
        run: |
          strip src/deccordd.exe src/deccord-cli.exe src/deccord-tx.exe src/qt/deccord-qt.exe

      - name: Create tar.gz and zip archives
        run: |
          mkdir -p deccord-20.0.1-windows-x86_64
          cp src/deccordd.exe src/deccord-cli.exe src/deccord-tx.exe src/qt/deccord-qt.exe deccord-20.0.1-windows-x86_64/
          tar -czvf deccord-20.0.1-windows-x86_64.tar.gz deccord-20.0.1-windows-x86_64
          zip -r deccord-20.0.1-windows-x86_64.zip deccord-20.0.1-windows-x86_64

      - name: Upload Windows Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deccord-windows-x86_64-build
          path: |
            deccord-20.0.1-windows-x86_64.tar.gz
            deccord-20.0.1-windows-x86_64.zip
